@model product_stock_mvc.Web.DTOs.ProviderDTO

@{
    ViewData["Title"] = "Edit Provider";
}

<h1>@ViewData["Title"]</h1>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <vc:summary></vc:summary>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <br/>
            <div class="form-group">
                <label asp-for="Document" class="control-label"></label>
                <input asp-for="Document" class="form-control" />
                <span asp-validation-for="Document" class="text-danger"></span>
            </div>
            <br/>
            <div class="form-group">
                <label asp-for="ProviderType" class="control-label"></label>
                <input asp-for="ProviderType" class="form-control" />
                <span asp-validation-for="ProviderType" class="text-danger"></span>
            </div>
            <br/>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="IsActive" /> @Html.DisplayNameFor(model => model.IsActive)
                </label>
            </div>
            <br/>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
                <a class="btn btn-warning text-white" href="javascript:window.history.back();">Cancel</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
